{% extends "Modules/layout.twig" %}
   
{% block content %}

<div id="content" class="container pm-form">
    {% if todolist %}
        <div id="buttons">
            <button
                id="todo_btn"
                class="tab btn btn-primary"
                style="margin:5px; font-weight:bold"
                onclick="showAction(event.target)">
                Hide Todo
            </button>
        </div>
        
        <div id="sections">
            <div id="spaceedit_todo">
                <div class="page-header">
                    <h3>Basic space configuration</h3>
                </div>
                
                {% for module in todolist %}
                    <div>
                        <h4> {{ module.title }} </h4>
                        <p>
                            <a href="{{module.docurl}}" style="font-style:italic">
                                {{ module.title }} documentation
                            </a>
                        </p>    

                        {% for task in module.tasks %}
                            {% set checked = task.done ? "checked" : "" %}
                            <div>
                                <input
                                    type="checkbox"
                                    id="{{task.id}}"
                                    name="{{task.id}}"
                                    disabled
                                    {{checked}} >
                                <label for="{{task.id}}" style="font-weight:normal">
                                    <a id="{{task.id}}_link" href="{{task.url}}{{todolist.redirectUrl}}">
                                        {{task.title}}
                                    </a>
                                </label>
                                {% if task.options %}
                                    <select id="{{task.id}}_select" class="customSelector">
                                        <option value="" selected="selected" disabled>{{task.options.defaultText}}</option>
                                        {% for item in task.options.list %}
                                            <option value={{item[0]}}>{{item[1]}}</option>
                                        {% endfor %}
                                    </select>
                                {% endif %}
                            </div>
                        {% endfor %}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
        <div id="spaceedit_form" style="display:block">
            {{ formHtml | raw }}
        </div>
    </div>
</div>

{% if todolist %}

    <script>
        setLinks();
        
        const todoBtn = document.getElementById("todo_btn");
        '{{showTodo}}' ? showAction(todoBtn) : todoBtn.innerHTML = "Show Todo";
        
        function showAction(todoBtn) {
            const section = document.getElementById("spaceedit_todo");
            section.classList.toggle("expanded");
            const expanded = section.classList.contains("expanded");
            if (expanded) {
                todoBtn.innerHTML = "Hide Todo";
            } else {
                todoBtn.innerHTML = "Show Todo";
            }
        }

        function setLinks() {
            const customSelectors = document.getElementsByClassName('customSelector');
            const taskNames = Array.from(customSelectors).map(item => item.id.split("_")[0]);
            taskNames.forEach(taskName => {
                let element = document.getElementById(taskName + '_link') ?? false;
                let [baseUrl, options] = element.href.split('?');
                let selector = document.getElementById(taskName + '_select') ?? false;

                element.addEventListener("click", (event) => {
                    event.preventDefault();
                    if (selector.options[selector.selectedIndex].value != "") {
                        let targetUrl = event.target.href;
                        targetUrl += "?origin=" + taskName;
                        targetUrl += "&" + options;
                        window.location = targetUrl;
                    }
                });

                selector.addEventListener("change", (event) => {
                    let selectedValue = event.target.options[event.target.selectedIndex].value;
                    element.href = baseUrl + "/" + selectedValue;
                });
            });
        }
    </script>

    <style type="text/css">
        #spaceedit_todo {
            max-height: 0px;
            overflow-y: hidden;
            transition: all 0.2s linear;
        }

        #spaceedit_todo.expanded {
            max-height: 1080px;
        }
    </style>

{% endif %}

{% endblock %}
